#!/bin/sh
# Enregistre dans le Passé
# Destiné à être inclus dans un shell (pour mémorisation du "début de session").

# Darcs 2.10 et suivants gèrent différemment le commentaire de rustine de son titre. Le titre est pris dans l'encodage 'locale', le commentaire interprété comme du CP1252. On convertit donc pour lui plaire.
# Darcs 2.14 corrige la chose.
case `darcs --version` in
	2.1[0-2].*) ep_filtrage="iconv -f utf-8 -t cp1252" ;; # Attention, ce n'est pas impeccable: grosso modo, seuls les caractères ISO8859-1 sont pris en compte; ainsi le é uC3A9, devenu cE9 via l'iconv, est bien retransformé en uC3A9 dans la rustine; par contre l'œ uC593, devenu c9C, reste u9C (invalide) dans la rustine; mais si l'on décide de laisser l'œ sous forme de cC593, darcs pour le coup le reconvertit en uC385C293 (iconv ISO8859-1 -> UTF-8 transforme C5 en C385 et 93 en C293)
	*) ep_filtrage=cat ;;
esac

ep_init()
{
	ep_dateRef="`darcs changes --xml . | head -3 | sed -e '/ date=/!d' -e "s/.* date='//" -e "s/'.*//"`"
	ep_dateRef="`TZ=GMT date -j -f %Y%m%d%H%M%S "$ep_dateRef" +%s`"
	ep_optionsDateRef=
	[ -z "$ep_dateRef" ] || ep_optionsDateRef="-r $ep_dateRef"
	ep_dateRef="`date $ep_optionsDateRef +%Y%m%d%H%M%S`"
	echo "Date de référence (dernière modif): $ep_dateRef"
	printf "À quelle date commençons-nous notre session ([[[aaaa]mm]jj]hhmm)? "
	read ep_date
	ep_expr_date="`echo "$ep_date" | tr '[0-9]' .`\(..\)$"
	ep_date="`echo "$ep_dateRef" | sed -e "s/$ep_expr_date/$ep_date\1/"`"
	ep_a_ce_moment="`date -j -f %Y%m%d%H%M%S "$ep_date" +%s`"
	ep_maintenant="`date +%s`"
	ep_decalage="`expr $ep_maintenant - $ep_a_ce_moment`"
	
	ep_chemin="`pwd`"
	while [ "$ep_chemin" != / -a ! -e "$ep_chemin/_darcs/prefs/author" ]
	do
		ep_chemin="`dirname "$ep_chemin"`"
	done
	ep_auteur="`darcs changes --last=1 | grep ^Author: | cut -d ' ' -f 2-`"
	[ ! -z "$ep_auteur" ] || ep_auteur="`sed -e 's/ *#.*//' < "$ep_chemin/_darcs/prefs/author" | grep -v ^$ | head -1`"
	if [ -z "$ep_auteur" ]
	then
		printf "Auteur? "
		read ep_auteur
	fi
}

paramsOmp()
{
	while [ $# -gt 0 ]
	do
		paramsOmp="$paramsOmp$1$sep"
		shift
	done
}

_epomp()
{
	local paramsOmp= sep="`printf '\003'`"
	while [ $# -gt 0 ]
	do
		case "$1" in
			-d) paramsOmp -e 'What is the date? ' $ep_maintenant ;; # Date
			-a) paramsOmp -e 'Who is the author? ' "$ep_auteur" ;; # Auteur
			-t) paramsOmp -e 'What is the patch name? ' "$ep_nom" ;; # Titre
			-e) paramsOmp -e 'What is the log?' "$comm" ;; # Explication
			*) break ;;
		esac
		shift
	done
	IFS="$sep"
	omp - $paramsOmp "$@"
}

ep()
{
	ep_nom="$1" ; shift
	ep_descr="$1" ; shift
	[ ! -z "$ep_decalage" ] || ep_init
	ep_maintenant="`date +%s`"
	ep_maintenant="`expr $ep_maintenant - $ep_decalage`"
	ep_maintenant="`TZ=GMT date -r $ep_maintenant +%Y%m%d%H%M%S`"
	local s3="`printf '\003'`"
	local comm="`echo "$ep_descr" | sed -e 's/\([^\]\)|/\1'"$s3"'/g' -e 's/[\]|/|/g' | tr "$s3" '\012' | $ep_filtrage`"
		_epomp -d -a -t -e darcs record --pipe "$@"
}

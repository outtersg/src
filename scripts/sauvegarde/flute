#!/bin/sh
# Peut être pour fiabiliser à la fois intégré à un cron et déclenché sur changement de fichiers.

internes()
{
	cat <<TERMINE
- /.*.flute
- /.*.??????
- /**/.*.??????
TERMINE
}

faire()
{
	local prefixe=
	[ "x$1" = x-p ] && shift && prefixe="$1" && shift || true
source="$1"
dest="$2"

# On évite de transmettre:
# - nos fichiers de travail
# - les fichiers temporaires d'un autre rsync qui serait en train de nous alimenter
	[ -e "$source/$prefixe.internes.flute" ] || internes > "$source/$prefixe.internes.flute"

	[ -e "$source/$prefixe.deja.flute" ] || internes > "$source/$prefixe.deja.flute"
while true
do
		( cat "$source/$prefixe.internes.flute" ; cd "$source" && ls | sed -e 's#^#- /#' ) > "$source/$prefixe.nouveaux.flute"
		# Si c'est un rsync distant, il faut mettre des \ devant les espaces (merci rsync utilisant ssh et son interprétation shell!).
		destrsync="`echo "$dest" | sed -e '/^[^/]*:/s# #\\\\ #g'`"
		rsync --exclude-from=- < "$source/$prefixe.deja.flute" -av "$source/" "$destrsync/" && mv "$source/$prefixe.nouveaux.flute" "$source/$prefixe.deja.flute" || break
	sleep 2
		[ `find "$source" -type f -newer "$source/$prefixe.deja.flute" | wc -l` -ne 0 ] || break
done
}

faireConf()
{
	local conf="$1" source="`dirname "$1"`"
	local prefixe="`basename "$conf" .conf.flute`"
	faire -p "$prefixe" "$source" "`cat "$conf"`"
}

analyserParametresEtFaire()
{
	if [ $# -eq 2 -a -d "$1" -a -d "$2" ] && [ "`find "$1" "$2" -name ".*.conf.flute" | wc -l`" -eq 0 ] # Le && plutôt que -a, car sh sous FreeBSD 10 évalue le find avant même d'avoir vérifié que $# -eq 2 et ce sont des dossiers.
	then
		# Ancienne sauce: source, destination précisées sur la ligne de commande. Comment distinguer de deux dossiers (sources) à synchroniser?
		faire "$1" "$2"
	else
		for d in "$@"
		do
			if [ -f "$d" ]
			then
				faireConf "$d"
			else
				find "$d" -maxdepth 1 -name ".*.conf.flute" | \
				(
					trouve=
					while read conf
					do
						trouve=1
						faireConf "$conf"
					done
					[ -n "$trouve" ] || echo "Aucun fichier .conf.flute dans $d" >&2
				)
			fi
		done
	fi
}

analyserParametresEtFaire "$@"
